{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","reset","setState","formSubmit","e","preventDefault","props","onSubmit","handleInputChange","target","value","this","onChange","type","pattern","title","required","Component","Filter","inputChange","filter","ContactList","contactsData","onRemoveContact","map","item","className","s","listItem","onClick","id","App","contacts","addContact","contact","uuidv4","checkedName","find","toLowerCase","alert","prevState","removeContact","filterContact","includes","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f53338c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__2FJ8s\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' })\r\n    };\r\n\r\n    formSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state)\r\n        this.reset();\r\n    }\r\n\r\n\r\n    handleInputChange = ({ target }) => {\r\n        const { name, value } = target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.formSubmit}>\r\n                <label> Name\r\n                    <input\r\n                        value={this.state.name}\r\n                        onChange={this.handleInputChange}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <label> Phone\r\n                    <input\r\n                        value={this.state.number}\r\n                        onChange={this.handleInputChange}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <button type=\"submit\">Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ inputChange, filter }) => {\r\n    return (<label>Find contacts by name\r\n        <input\r\n            value={filter}\r\n            onChange={inputChange}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n        />\r\n    </label>)\r\n}\r\n\r\nexport default Filter\r\n\r\nFilter.propTypes = {\r\n    inputChange: PropTypes.func.isRequired,\r\n    filter: PropTypes.string.isRequired,\r\n};","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css'\r\n\r\nconst ContactList = ({ contactsData, onRemoveContact }) => {\r\n    return (<ul>\r\n        {contactsData.map(item => {\r\n            return (<li key={item.id} className={s.listItem}>\r\n                <p>{item.name} :</p>\r\n                <p>{item.number}</p>\r\n                <button type=\"button\" onClick={() => onRemoveContact(item.id)}>Delete</button>\r\n            </li>)\r\n        })}\r\n    </ul>)\r\n}\r\n\r\nexport default ContactList\r\n\r\nContactList.propTypes = {\r\n    contactsData: PropTypes.array.isRequired,\r\n    onRemoveContact: PropTypes.func.isRequired,\r\n};","import { Component } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter'\nimport ContactList from './components/ContactList'\n\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  handleInputChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    }\n    const checkedName = this.state.contacts.find(contact => name.toLowerCase() === contact.name.toLowerCase());\n    checkedName ? alert(`${name} is already in contacts!`) : this.setState(prevState => ({ contacts: [...prevState.contacts, contact] }))\n  };\n\n  removeContact = (id) => {\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts].filter(item => item.id !== id)\n      }\n    })\n  }\n\n  filterContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\n  }\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'))\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts })\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts)\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n  }\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter inputChange={this.handleInputChange} filter={filter} />\n        <ContactList contactsData={this.filterContact()} onRemoveContact={this.removeContact} />\n      </>\n    )\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}